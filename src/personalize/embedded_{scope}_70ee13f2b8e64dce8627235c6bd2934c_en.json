{
  "clientKey": "84c3696ed849ab686bb60d0058523ef9",
  "href": "https://api-us.boxever.com/v3/flowDefinitions/0197fd56-9665-42e1-ba3f-5db96e886027",
  "ref": "0197fd56-9665-42e1-ba3f-5db96e886027",
  "name": "embedded_{scope}_70ee13f2b8e64dce8627235c6bd2934c_en",
  "modifiedByRef": "auth0|62eab1d8f7252c66e19976a9",
  "modifiedAt": "2025-02-19T18:13:35.227Z",
  "revision": 2,
  "archived": false,
  "friendlyId": "embedded_{scope}_70ee13f2b8e64dce8627235c6bd2934c_en",
  "type": "INTERACTIVE_API_FLOW",
  "subtype": "EXPERIENCE",
  "channels": [
    "WEB"
  ],
  "triggers": [],
  "dashboardLinks": [],
  "tags": [],
  "businessProcess": "interactive_v1",
  "siteId": "4905319f-5b19-4ec4-9860-7bfcf5d4a2b5",
  "traffic": {
    "type": "audienceTraffic",
    "weightingAlgorithm": "USER_DEFINED",
    "modifiedAt": "2025-02-19T18:13:35.362Z",
    "splits": [
      {
        "template": "{\"variantId\": \"fc16226a679c4f4192fcf5cf0033939f\"}",
        "variantName": "Audience",
        "audienceName": "Audience",
        "conditionGroups": [
          {
            "conditions": [
              {
                "templateId": "country_region",
                "params": {
                  "is": "is",
                  "country": "US",
                  "region(s)": "GA"
                }
              }
            ]
          }
        ]
      }
    ]
  },
  "variants": [],
  "transpiledVariants": [
    {
      "ref": "f0ae8db9-3473-4f08-9e77-44ef99de28e6",
      "name": "Audience",
      "tasks": [
        {
          "implementation": "templateRenderTask",
          "input": {
            "inputType": "templateRenderTaskInput",
            "type": "application/json",
            "template": "{\"variantId\": \"fc16226a679c4f4192fcf5cf0033939f\"}"
          }
        },
        {
          "implementation": "conditionsTask",
          "input": {
            "inputType": "conditionsTaskInput",
            "rules": [
              {
                "id": "scriptCondition",
                "name": "Combined condition groups",
                "description": "Combined templates within condition group for targeted experience",
                "ruleData": {
                  "expression": "(function () {\n    var visited = \"is\";\n    var countriesString = \"US\";\n    var regionsString = \"GA\";\n    var countriesArray = countriesString.split(\",\");\n    var regionsArray = regionsString.split(\",\");\n    var expectedType = \"WEB\";\n    var expectedStatus = \"OPEN\";\n    var regionMatch = false;\n        \n    if (request && request.params && request.params.geo && request.params.geo.country) {\n        if(countriesArray.indexOf(request.params.geo.country) > -1 && request.params.geo.region) {\n            regionMatch = regionsArray.indexOf(request.params.geo.region) > -1;\n        }\n    } else if (request && request.requestDetails && request.requestDetails.headers && request.requestDetails.headers[\"cf-ipCountry\"]) {\n        if (countriesArray.indexOf(request.requestDetails.headers[\"cf-ipCountry\"]) > -1 && request.requestDetails.headers[\"cf-region-code\"]) {\n            regionMatch = regionsArray.indexOf(request.requestDetails.headers[\"cf-region-code\"]) > -1;\n        }\n        \n    } else if (guest && guest.sessions && guest.sessions.length > 0) {\n        loop:\n        for (var i = 0; i < guest.sessions.length; i++) {\n            if (guest.sessions[i]) {\n                if (guest.sessions[i].sessionType !== expectedType || guest.sessions[i].status !== expectedStatus) {\n                    continue loop;\n                } else if ( guest.sessions[i].dataExtensions) {\n                    for (var j = 0; j < guest.sessions[i].dataExtensions.length; j++) {\n                       if (guest.sessions[i].dataExtensions[j].key && guest.sessions[i].dataExtensions[j].key === \"bxt\") {\n                           if (guest.sessions[i].dataExtensions[j].values && guest.sessions[i].dataExtensions[j].values.geoLocationCountry) {\n                               if (countriesArray.indexOf(guest.sessions[i].dataExtensions[j].values.geoLocationCountry) > -1) {    \n                                      regionMatch = regionsArray.indexOf(guest.sessions[i].dataExtensions[j].values.geoLocationRegion) > -1;\n                                      if (regionMatch) {\n                                          break;\n                                      }\n                               }\n                           }\n                       } \n                    }\n                }\n            }\n        }\n    }\n                \n    return ((visited === \"is\") && regionMatch) || ((visited === \"is not\") && !regionMatch);\n})();"
                }
              }
            ]
          }
        }
      ]
    }
  ],
  "status": "PRODUCTION",
  "schedule": {
    "type": "simpleSchedule",
    "startDate": "2025-02-19T18:12:14.254Z"
  },
  "revisions": {
    "href": "https://api-us.boxever.com/v3/flowDefinitions/0197fd56-9665-42e1-ba3f-5db96e886027/revisions"
  },
  "sampleSizeConfig": {
    "baseValue": 0.15,
    "minimumDetectableDifference": 0.02,
    "confidenceLevel": 0.95
  },
  "notificationEnabled": false
}
